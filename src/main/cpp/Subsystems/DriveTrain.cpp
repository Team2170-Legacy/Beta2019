// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Subsystems/DriveTrain.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

DriveTrain::DriveTrain() : frc::Subsystem("DriveTrain") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    sparkMax1.reset(new rev::CANSparkMax(0, rev::CANSparkMax::MotorType::kBrushless));
    sparkMax2.reset(new rev::CANSparkMax(1, rev::CANSparkMax::MotorType::kBrushless));
    speedControllerGroupLeft = std::make_shared<frc::SpeedControllerGroup>(*sparkMax1, *sparkMax2  );
    sparkMax3.reset(new rev::CANSparkMax(2, rev::CANSparkMax::MotorType::kBrushless));
    sparkMax4.reset(new rev::CANSparkMax(3, rev::CANSparkMax::MotorType::kBrushless));
    speedControllerGroupRight = std::make_shared<frc::SpeedControllerGroup>(*sparkMax3, *sparkMax4  );
    differentialDrive.reset(new frc::DifferentialDrive(*speedControllerGroupLeft, *speedControllerGroupRight));

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void DriveTrain::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void DriveTrain::Periodic() {
    // Put code here to be run every loop

}

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


// Put methods for controlling this subsystem
// here. Call these from Commands.

void DriveTrain::TankDrive(double left, double right) {
    differentialDrive->TankDrive(left, right);
}


